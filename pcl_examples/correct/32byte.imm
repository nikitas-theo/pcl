; ModuleID = '32byte'
source_filename = "32byte"

%anon = type { <{}>* }
%anon.0 = type { %anon* }
%anon.1 = type { %anon* }

@str = private unnamed_addr constant [6 x i8] c"\0A---\0A\00", align 1
@str.1 = private unnamed_addr constant [25 x i8] c"truefalsetruefalsefalse\0A\00", align 1

declare i8* @GC_malloc(i64)

declare void @GC_init()

declare void @GC_free(i8*)

declare void @writeInteger(i32)

declare void @writeBoolean(i1)

declare void @writeChar(i8)

declare void @writeReal(double)

declare void @writeString(i8*)

declare i32 @readInteger()

declare i1 @readBoolean()

declare i8 @readChar()

declare double @readReal()

declare void @readString(i32, i8*)

declare i32 @abs(i32)

declare double @fabs(double)

declare double @sqrt(double)

declare double @sin(double)

declare double @cos(double)

declare double @tan(double)

declare double @arctan(double)

declare double @exp(double)

declare double @ln(double)

declare double @pi()

declare i32 @ord(i8)

declare i8 @chr(i32)

declare i32 @truncFunc(double)

declare i32 @roundFunc(double)

define void @main() {
entry:
  call void @GC_init()
  %hidden_struct = alloca %anon
  %a = alloca i1
  %b = alloca i1
  store i1 true, i1* %a
  store i1 false, i1* %b
  call void @writeBoolean(i1 true)
  call void @writeBoolean(i1 false)
  %call = load i1, i1* %a
  call void @writeBoolean(i1 %call)
  %call1 = load i1, i1* %b
  call void @writeBoolean(i1 %call1)
  %0 = call i1 @lala(%anon* %hidden_struct, i1 false, i1* %a)
  call void @writeBoolean(i1 %0)
  call void @correct(%anon* %hidden_struct)
  ret void
}

define void @correct(%anon* %0) {
entry:
  %hidden_struct = alloca %anon.0
  %1 = getelementptr %anon.0, %anon.0* %hidden_struct, i32 0, i32 0
  store %anon* %0, %anon** %1
  call void @writeString(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str, i32 0, i32 0))
  call void @writeString(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @str.1, i32 0, i32 0))
  ret void
}

define i1 @lala(%anon* %0, i1 %1, i1* %2) {
entry:
  %a = alloca i1
  store i1 %1, i1* %a
  %hidden_struct = alloca %anon.1
  %3 = getelementptr %anon.1, %anon.1* %hidden_struct, i32 0, i32 0
  store %anon* %0, %anon** %3
  %result = alloca i1
  %binop_l = load i1, i1* %a
  %4 = icmp eq i1 %binop_l, false
  br i1 %4, label %short_and, label %full_and

short_and:                                        ; preds = %entry
  br label %end_and

full_and:                                         ; preds = %entry
  %binop_r = load i1, i1* %2
  %andtmp = and i1 %binop_l, %binop_r
  br label %end_and

end_and:                                          ; preds = %full_and, %short_and
  %phi_and = phi i1 [ false, %short_and ], [ %andtmp, %full_and ]
  store i1 %phi_and, i1* %result
  %fdef = load i1, i1* %result
  ret i1 %fdef
}
