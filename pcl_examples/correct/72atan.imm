; ModuleID = '72atan'
source_filename = "72atan"

%anon = type { <{}>* }
%anon.0 = type { %anon* }

@str = private unnamed_addr constant [5 x i8] c"---\0A\00", align 1
@str.1 = private unnamed_addr constant [5 x i8] c"4.2\0A\00", align 1
@str.2 = private unnamed_addr constant [33 x i8] c"1.33705314593   (approximately)\0A\00", align 1
@str.3 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@str.4 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1

declare i8* @GC_malloc(i64)

declare void @GC_init()

declare void @GC_free(i8*)

declare void @writeInteger(i32)

declare void @writeBoolean(i1)

declare void @writeChar(i8)

declare void @writeReal(double)

declare void @writeString(i8*)

declare i32 @readInteger()

declare i1 @readBoolean()

declare i8 @readChar()

declare double @readReal()

declare void @readString(i32, i8*)

declare i32 @abs(i32)

declare double @fabs(double)

declare double @sqrt(double)

declare double @sin(double)

declare double @cos(double)

declare double @tan(double)

declare double @arctan(double)

declare double @exp(double)

declare double @ln(double)

declare double @pi()

declare i32 @ord(i8)

declare i8 @chr(i32)

declare i32 @truncFunc(double)

declare i32 @roundFunc(double)

define void @main() {
entry:
  call void @GC_init()
  %hidden_struct = alloca %anon
  %x = alloca double
  %y = alloca double
  %i = alloca i32
  %j = alloca i32
  store i32 84, i32* %i
  store i32 20, i32* %j
  %binop_r = load i32, i32* %j
  %binop_l = load i32, i32* %i
  %0 = sitofp i32 %binop_l to double
  %1 = sitofp i32 %binop_r to double
  %addtmp = fdiv double %0, %1
  store double %addtmp, double* %x
  %call = load double, double* %x
  call void @writeReal(double %call)
  call void @writeString(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.3, i32 0, i32 0))
  %call1 = load double, double* %x
  %2 = call double @arctan(double %call1)
  store double %2, double* %y
  %call2 = load double, double* %y
  call void @writeReal(double %call2)
  call void @writeString(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.4, i32 0, i32 0))
  call void @correct(%anon* %hidden_struct)
  ret void
}

define void @correct(%anon* %0) {
entry:
  %hidden_struct = alloca %anon.0
  %1 = getelementptr %anon.0, %anon.0* %hidden_struct, i32 0, i32 0
  store %anon* %0, %anon** %1
  call void @writeString(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str, i32 0, i32 0))
  call void @writeString(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.1, i32 0, i32 0))
  call void @writeString(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @str.2, i32 0, i32 0))
  ret void
}
