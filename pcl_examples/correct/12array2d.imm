; ModuleID = '12array2d'
source_filename = "12array2d"

%anon = type { <{}>* }

declare i8* @GC_malloc(i64)

declare void @GC_init()

declare void @GC_free(i8*)

declare void @writeInteger(i32)

declare void @writeBoolean(i1)

declare void @writeChar(i8)

declare void @writeReal(double)

declare void @writeString(i8*)

declare i32 @readInteger()

declare i1 @readBoolean()

declare i8 @readChar()

declare double @readReal()

declare void @readString(i32, i8*)

declare i32 @abs(i32)

declare double @fabs(double)

declare double @sqrt(double)

declare double @sin(double)

declare double @cos(double)

declare double @tan(double)

declare double @arctan(double)

declare double @exp(double)

declare double @ln(double)

declare double @pi()

declare i32 @ord(i8)

declare i8 @chr(i32)

declare i32 @truncFunc(double)

declare i32 @roundFunc(double)

define void @main() {
entry:
  call void @GC_init()
  %hidden_struct = alloca %anon
  %x = alloca [50 x [50 x i8]]
  %arrayIdx = getelementptr [50 x [50 x i8]], [50 x [50 x i8]]* %x, i64 0, i64 1
  %arrayIdx1 = getelementptr [50 x i8], [50 x i8]* %arrayIdx, i64 0, i64 0
  store i8 52, i8* %arrayIdx1
  %arrayIdx2 = getelementptr [50 x [50 x i8]], [50 x [50 x i8]]* %x, i64 0, i64 1
  %arrayIdx3 = getelementptr [50 x i8], [50 x i8]* %arrayIdx2, i64 0, i64 1
  store i8 50, i8* %arrayIdx3
  %arrayIdx4 = getelementptr [50 x [50 x i8]], [50 x [50 x i8]]* %x, i64 0, i64 1
  %arrayIdx5 = getelementptr [50 x i8], [50 x i8]* %arrayIdx4, i64 0, i64 2
  store i8 0, i8* %arrayIdx5
  %arrayIdx6 = getelementptr [50 x [50 x i8]], [50 x [50 x i8]]* %x, i64 0, i64 1
  %bitcast_special_ref = bitcast [50 x i8]* %arrayIdx6 to i8*
  call void @writeString(i8* %bitcast_special_ref)
  ret void
}
